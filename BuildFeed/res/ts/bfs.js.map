{"version":3,"sources":["bfs.ts"],"names":["BuildFeed","ajax","timeout","MobileMenuToggle","ev","preventDefault","this","nextElementSibling","classList","toggle","DropdownClick","link","alreadyOpen","parentElement","contains","CloseDropdowns","document","getElementById","add","ddParents","getElementsByClassName","i","length","remove","SwitchTheme","cookie","dataset","location","reload","SwitchLanguage","OpenSearch","CloseSearch","StopClick","stopPropagation","InitiateSearch","innerHTML","clearTimeout","readyState","XMLHttpRequest","DONE","abort","setInterval","SendSearch","modalInput","onreadystatechange","CompleteSearch","open","value","setRequestHeader","send","status","resultPane","templateContent","content","jsrender","templates","render","JSON","parse","responseText","resultLinks","getElementsByTagName","addEventListener","mev","ga","assign","currentTarget","href","BuildFeedSetup","j","childNodes","el","nodeName","ddThemes","ddLangs","window"],"mappings":"AAEA,aAEA,IAAOA,WAAP,SAAOA,GAEH,IAAIC,EACAC,EAEJ,SAAAC,EAAiCC,GAE7BA,EAAGC,iBAEYC,KACRC,mBAAmBC,UAAUC,OAAO,QAG/C,SAAAC,EAA8BN,GAE1BA,EAAGC,iBAEH,MAAMM,EAAOL,KACPM,EAAcD,EAAKE,cAAcL,UAAUM,SAAS,QAI1D,GAFAC,EAAeX,IAEVQ,EACL,CACID,EAAKE,cAAcL,UAAUC,OAAO,QAEXO,SAASC,eAAe,qBAChCT,UAAUU,IAAI,SAIvC,SAAAH,EAA+BX,GAE3BA,EAAGC,iBAEH,MAAMc,EAAYH,SAASI,uBAAuB,mBAClD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAElCF,EAAUE,GAAGb,UAAUe,OAAO,QAGTP,SAASC,eAAe,qBAChCT,UAAUe,OAAO,QAGtC,SAAAC,EAA4BpB,GAExBA,EAAGC,iBAGHW,SAASS,mBADInB,KACsBoB,QAAe,uDAClDC,SAASC,QAAO,GAGpB,SAAAC,EAA+BzB,GAE3BA,EAAGC,iBAGHW,SAASS,kBADInB,KACqBoB,QAAc,sDAChDC,SAASC,QAAO,GAGpB,SAAAE,EAA2B1B,GAEvBA,EAAGC,iBAEWW,SAASC,eAAe,wBAChCT,UAAUU,IAAI,QAGxB,SAAAa,EAA4B3B,GAExBA,EAAGC,iBAEWW,SAASC,eAAe,wBAChCT,UAAUe,OAAO,QAG3B,SAAAS,EAA0B5B,GAEtBA,EAAGC,iBACHD,EAAG6B,kBAGP,SAAAC,EAA+B9B,GAERY,SAASC,eAAe,uBAChCkB,UAAY,QAEE,IAAd,GAEPC,aAAalC,QAGK,IAAX,GAA0BD,EAAKoC,aAAeC,eAAeC,MAEpEtC,EAAKuC,QAGTtC,EAAUuC,YAAYC,EAAY,KAGtC,SAAAA,SAE6B,IAAd,GAEPN,aAAalC,GAGjB,MAAMyC,EAAa3B,SAASC,eAAe,uBAE3ChB,EAAO,IAAIqC,gBACNM,mBAAqBC,EAC1B5C,EAAK6C,KAAK,8BAA+BH,EAAWI,UAAU,GAC9D9C,EAAK+C,iBAAiB,SAAU,oBAChC/C,EAAKgD,KAAK,MAGd,SAAAJ,EAA+BzC,GAE3B,GAAIH,EAAKoC,aAAeC,eAAeC,MAAwB,MAAhBtC,EAAKiD,OAEhD,OAGJ,MAAMC,EAAanC,SAASC,eAAe,uBACrCmC,EAAkBpC,SAASC,eAAe,mBAE1CoC,EADWC,SAASC,UAAUH,EAAgBjB,WAC3BqB,OAAOC,KAAKC,MAAMzD,EAAK0D,eAChDR,EAAWhB,UAAYkB,EAEvB,MAAMO,EAAcT,EAAWU,qBAAqB,KACpD,IAAK,IAAIxC,EAAI,EAAGA,EAAIuC,EAAYtC,OAAQD,IAEpCuC,EAAYvC,GAAGyC,iBAAiB,QAC3BC,IAEGA,EAAI1D,iBACJ,MAAMsC,EAAa3B,SAASC,eAAe,sBAC3C+C,GAAG,OAAQ,mCAAoCrB,EAAWI,UAC1DpB,SAASsC,OAAQF,EAAIG,cAAoCC,QAxIzDnE,EAAAG,iBAAgBA,EAQhBH,EAAAU,cAAaA,EAkBbV,EAAAe,eAAcA,EAcdf,EAAAwB,YAAWA,EASXxB,EAAA6B,eAAcA,EASd7B,EAAA8B,WAAUA,EAQV9B,EAAA+B,YAAWA,EAQX/B,EAAAgC,UAASA,EAMThC,EAAAkC,eAAcA,EAkBdlC,EAAA0C,WAAUA,EAgBV1C,EAAA6C,eAAcA,EA2Bd7C,EAAAoE,eAAhB,SAA+BhE,GAE3B,MAAMe,EAAYH,SAASI,uBAAuB,mBAClD,IAAK,IAAIC,EAAI,EAAGA,EAAIF,EAAUG,OAAQD,IAElC,IAAK,IAAIgD,EAAI,EAAGA,EAAIlD,EAAUE,GAAGiD,WAAWhD,OAAQ+C,IACpD,CACI,MAAME,EAAKpD,EAAUE,GAAGiD,WAAWD,GAEf,MAAhBE,EAAGC,UAEHD,EAAGT,iBAAiB,QAASpD,GAKhBM,SAASC,eAAe,qBAChC6C,iBAAiB,QAAS/C,GAE3C,MAAM0D,EAAWzD,SAASC,eAAe,uBAAuB4C,qBAAqB,KACrF,IAAK,IAAIxC,EAAI,EAAGA,EAAIoD,EAASnD,OAAQD,IAEjCoD,EAASpD,GAAGyC,iBAAiB,QAAStC,GAG1C,MAAMkD,EAAU1D,SAASC,eAAe,sBAAsB4C,qBAAqB,KACnF,IAAK,IAAIxC,EAAI,EAAGA,EAAIqD,EAAQpD,OAAQD,IAEhCqD,EAAQrD,GAAGyC,iBAAiB,QAASjC,GAG1Bb,SAASC,eAAe,0BAChC6C,iBAAiB,QAAS3D,GAEfa,SAASC,eAAe,0BAChC6C,iBAAiB,QAAShC,GAEfd,SAASC,eAAe,wBAChC6C,iBAAiB,QAAS/B,GAEnBf,SAASC,eAAe,gBAChC6C,iBAAiB,QAAS9B,GAEnBhB,SAASC,eAAe,sBAChC6C,iBAAiB,QAAS5B,IA9L7C,CAAOlC,YAAAA,eAkMP2E,OAAOb,iBAAiB,OAAQ9D,UAAUoE","file":"bfs.js","sourcesContent":["/// <reference path=\"../../scripts/typings/google.analytics/ga.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/jsrender/jsrender.d.ts\" />\r\n\"use strict\";\r\n\r\nmodule BuildFeed\r\n{\r\n    let ajax: XMLHttpRequest;\r\n    let timeout: number;\r\n\r\n    export function MobileMenuToggle(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const button = this as HTMLButtonElement;\r\n        button.nextElementSibling.classList.toggle(\"open\");\r\n    }\r\n\r\n    export function DropdownClick(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const link = this as HTMLAnchorElement;\r\n        const alreadyOpen = link.parentElement.classList.contains(\"open\");\r\n\r\n        CloseDropdowns(ev);\r\n\r\n        if (!alreadyOpen)\r\n        {\r\n            link.parentElement.classList.toggle(\"open\");\r\n\r\n            const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n            menuClickCapture.classList.add(\"open\");\r\n        }\r\n    }\r\n\r\n    export function CloseDropdowns(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n        for (let i = 0; i < ddParents.length; i++)\r\n        {\r\n            ddParents[i].classList.remove(\"open\");\r\n        }\r\n\r\n        const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n        menuClickCapture.classList.remove(\"open\");\r\n    }\r\n\r\n    export function SwitchTheme(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const link = this as HTMLAnchorElement;\r\n        document.cookie = `bf_theme=${link.dataset[\"theme\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n        location.reload(true);\r\n    }\r\n\r\n    export function SwitchLanguage(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const link = this as HTMLAnchorElement;\r\n        document.cookie = `bf_lang=${link.dataset[\"lang\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n        location.reload(true);\r\n    }\r\n\r\n    export function OpenSearch(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n        modal.classList.add(\"open\");\r\n    }\r\n\r\n    export function CloseSearch(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n\r\n        const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n        modal.classList.remove(\"open\");\r\n    }\r\n\r\n    export function StopClick(ev: MouseEvent)\r\n    {\r\n        ev.preventDefault();\r\n        ev.stopPropagation();\r\n    }\r\n\r\n    export function InitiateSearch(ev: KeyboardEvent)\r\n    {\r\n        const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n        resultPane.innerHTML = \"\";\r\n\r\n        if (typeof (timeout) !== \"undefined\")\r\n        {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n        if (typeof (ajax) !== \"undefined\" && ajax.readyState !== XMLHttpRequest.DONE)\r\n        {\r\n            ajax.abort();\r\n        }\r\n\r\n        timeout = setInterval(SendSearch, 200);\r\n    }\r\n\r\n    export function SendSearch()\r\n    {\r\n        if (typeof (timeout) !== \"undefined\")\r\n        {\r\n            clearTimeout(timeout);\r\n        }\r\n\r\n        const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n\r\n        ajax = new XMLHttpRequest();\r\n        ajax.onreadystatechange = CompleteSearch;\r\n        ajax.open(\"GET\", `/api/GetSearchResult/${modalInput.value}/`, true);\r\n        ajax.setRequestHeader(\"accept\", \"application/json\");\r\n        ajax.send(null);\r\n    }\r\n\r\n    export function CompleteSearch(ev: ProgressEvent)\r\n    {\r\n        if (ajax.readyState !== XMLHttpRequest.DONE || ajax.status !== 200)\r\n        {\r\n            return;\r\n        }\r\n\r\n        const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n        const templateContent = document.getElementById(\"result-template\") as HTMLDivElement;\r\n        const template = jsrender.templates(templateContent.innerHTML);\r\n        const content = template.render(JSON.parse(ajax.responseText));\r\n        resultPane.innerHTML = content;\r\n\r\n        const resultLinks = resultPane.getElementsByTagName(\"a\");\r\n        for (let i = 0; i < resultLinks.length; i++)\r\n        {\r\n            resultLinks[i].addEventListener(\"click\",\r\n                (mev: MouseEvent) =>\r\n                {\r\n                    mev.preventDefault();\r\n                    const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n                    ga(\"send\", \"pageview\", `/api/GetSearchResult/${modalInput.value}/`);\r\n                    location.assign((mev.currentTarget as HTMLAnchorElement).href);\r\n                });\r\n        }\r\n    }\r\n\r\n    export function BuildFeedSetup(ev: Event)\r\n    {\r\n        const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n        for (let i = 0; i < ddParents.length; i++)\r\n        {\r\n            for (let j = 0; j < ddParents[i].childNodes.length; j++)\r\n            {\r\n                const el = ddParents[i].childNodes[j];\r\n\r\n                if (el.nodeName === \"A\")\r\n                {\r\n                    el.addEventListener(\"click\", DropdownClick);\r\n                }\r\n            }\r\n        }\r\n\r\n        const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n        menuClickCapture.addEventListener(\"click\", CloseDropdowns);\r\n\r\n        const ddThemes = document.getElementById(\"settings-theme-menu\").getElementsByTagName(\"a\");\r\n        for (let i = 0; i < ddThemes.length; i++)\r\n        {\r\n            ddThemes[i].addEventListener(\"click\", SwitchTheme);\r\n        }\r\n\r\n        const ddLangs = document.getElementById(\"settings-lang-menu\").getElementsByTagName(\"a\");\r\n        for (let i = 0; i < ddLangs.length; i++)\r\n        {\r\n            ddLangs[i].addEventListener(\"click\", SwitchLanguage);\r\n        }\r\n\r\n        const btnNav = document.getElementById(\"page-navigation-toggle\");\r\n        btnNav.addEventListener(\"click\", MobileMenuToggle);\r\n\r\n        const btnSearch = document.getElementById(\"page-navigation-search\");\r\n        btnSearch.addEventListener(\"click\", OpenSearch);\r\n\r\n        const modalOverlay = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n        modalOverlay.addEventListener(\"click\", CloseSearch);\r\n\r\n        const modalDialog = document.getElementById(\"modal-search\") as HTMLDivElement;\r\n        modalDialog.addEventListener(\"click\", StopClick);\r\n\r\n        const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n        modalInput.addEventListener(\"keyup\", InitiateSearch);\r\n    }\r\n}\r\n\r\nwindow.addEventListener(\"load\", BuildFeed.BuildFeedSetup);"]}