{"version":3,"sources":["bfs.ts"],"names":["BuildFeed","MobileMenuToggle","ev","preventDefault","this","nextElementSibling","classList","toggle","DropdownClick","link","alreadyOpen","parentElement","contains","CloseDropdowns","document","getElementById","add","ddParents","getElementsByClassName","i","length","remove","SwitchTheme","cookie","dataset","location","reload","SwitchLanguage","OpenSearch","CloseSearch","StopClick","stopPropagation","InitiateSearch","innerHTML","clearTimeout","timeout","ajax","readyState","XMLHttpRequest","DONE","abort","setInterval","SendSearch","modalInput","onreadystatechange","CompleteSearch","open","value","setRequestHeader","send","status","resultPane","templateContent","template","jsrender","templates","content","render","JSON","parse","responseText","resultLinks","getElementsByTagName","addEventListener","mev","ga","assign","currentTarget","href","BuildFeedSetup","j","childNodes","el","nodeName","ddThemes","ddLangs","window"],"mappings":"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","file":"bfs.js","sourcesContent":["/// <reference path=\"../../scripts/typings/google.analytics/ga.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/jsrender/jsrender.d.ts\" />\r\n\"use strict\";\r\n\r\nmodule BuildFeed\r\n{\r\n   let ajax: XMLHttpRequest;\r\n   let timeout: number;\r\n\r\n   export function MobileMenuToggle(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const button = this as HTMLButtonElement;\r\n      button.nextElementSibling.classList.toggle(\"open\");\r\n   }\r\n\r\n   export function DropdownClick(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      const alreadyOpen = link.parentElement.classList.contains(\"open\");\r\n\r\n      CloseDropdowns(ev);\r\n\r\n      if (!alreadyOpen)\r\n      {\r\n         link.parentElement.classList.toggle(\"open\");\r\n\r\n         const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n         menuClickCapture.classList.add(\"open\");\r\n      }\r\n   }\r\n\r\n   export function CloseDropdowns(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n      for (let i = 0; i < ddParents.length; i++)\r\n      {\r\n         ddParents[i].classList.remove(\"open\");\r\n      }\r\n\r\n      const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n      menuClickCapture.classList.remove(\"open\");\r\n   }\r\n\r\n   export function SwitchTheme(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      document.cookie = `bf_theme=${link.dataset[\"theme\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n      location.reload(true);\r\n   }\r\n\r\n   export function SwitchLanguage(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      document.cookie = `bf_lang=${link.dataset[\"lang\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n      location.reload(true);\r\n   }\r\n\r\n   export function OpenSearch(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modal.classList.add(\"open\");\r\n   }\r\n\r\n   export function CloseSearch(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modal.classList.remove(\"open\");\r\n   }\r\n\r\n   export function StopClick(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n   }\r\n\r\n   export function InitiateSearch(ev: KeyboardEvent)\r\n   {\r\n      const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n      resultPane.innerHTML = \"\";\r\n\r\n      if (typeof (timeout) !== \"undefined\")\r\n      {\r\n         clearTimeout(timeout);\r\n      }\r\n\r\n      if (typeof (ajax) !== \"undefined\" && ajax.readyState !== XMLHttpRequest.DONE)\r\n      {\r\n         ajax.abort();\r\n      }\r\n\r\n      timeout = setInterval(SendSearch, 200);\r\n   }\r\n\r\n   export function SendSearch()\r\n   {\r\n      if (typeof (timeout) !== \"undefined\")\r\n      {\r\n         clearTimeout(timeout);\r\n      }\r\n\r\n      const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n\r\n      ajax = new XMLHttpRequest();\r\n      ajax.onreadystatechange = CompleteSearch;\r\n      ajax.open(\"GET\", `/api/GetSearchResult/${modalInput.value}/`, true);\r\n      ajax.setRequestHeader(\"accept\", \"application/json\");\r\n      ajax.send(null);\r\n   }\r\n\r\n   export function CompleteSearch(ev: ProgressEvent)\r\n   {\r\n      if (ajax.readyState !== XMLHttpRequest.DONE || ajax.status !== 200)\r\n      {\r\n         return;\r\n      }\r\n\r\n      const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n      const templateContent = document.getElementById(\"result-template\") as HTMLDivElement;\r\n      const template = jsrender.templates(templateContent.innerHTML);\r\n      const content = template.render(JSON.parse(ajax.responseText));\r\n      resultPane.innerHTML = content;\r\n\r\n      const resultLinks = resultPane.getElementsByTagName(\"a\");\r\n      for (let i = 0; i < resultLinks.length; i++)\r\n      {\r\n         resultLinks[i].addEventListener(\"click\", (mev: MouseEvent) =>\r\n         {\r\n            mev.preventDefault();\r\n            const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n            ga(\"send\", \"pageview\", `/api/GetSearchResult/${modalInput.value}/`);\r\n            location.assign((mev.currentTarget as HTMLAnchorElement).href);\r\n         });\r\n      }\r\n   }\r\n\r\n   export function BuildFeedSetup(ev: Event)\r\n   {\r\n      const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n      for (let i = 0; i < ddParents.length; i++)\r\n      {\r\n         for (let j = 0; j < ddParents[i].childNodes.length; j++)\r\n         {\r\n            const el = ddParents[i].childNodes[j];\r\n\r\n            if (el.nodeName === \"A\")\r\n            {\r\n               el.addEventListener(\"click\", DropdownClick);\r\n            }\r\n         }\r\n      }\r\n\r\n      const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n      menuClickCapture.addEventListener(\"click\", CloseDropdowns);\r\n\r\n      const ddThemes = document.getElementById(\"settings-theme-menu\").getElementsByTagName(\"a\");\r\n      for (let i = 0; i < ddThemes.length; i++)\r\n      {\r\n         ddThemes[i].addEventListener(\"click\", SwitchTheme);\r\n      }\r\n\r\n      const ddLangs = document.getElementById(\"settings-lang-menu\").getElementsByTagName(\"a\");\r\n      for (let i = 0; i < ddLangs.length; i++)\r\n      {\r\n         ddLangs[i].addEventListener(\"click\", SwitchLanguage);\r\n      }\r\n\r\n      const btnNav = document.getElementById(\"page-navigation-toggle\");\r\n      btnNav.addEventListener(\"click\", MobileMenuToggle);\r\n\r\n      const btnSearch = document.getElementById(\"page-navigation-search\");\r\n      btnSearch.addEventListener(\"click\", OpenSearch);\r\n\r\n      const modalOverlay = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modalOverlay.addEventListener(\"click\", CloseSearch);\r\n\r\n      const modalDialog = document.getElementById(\"modal-search\") as HTMLDivElement;\r\n      modalDialog.addEventListener(\"click\", StopClick);\r\n\r\n      const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n      modalInput.addEventListener(\"keyup\", InitiateSearch);\r\n   }\r\n}\r\n\r\nwindow.addEventListener(\"load\", BuildFeed.BuildFeedSetup);"]}