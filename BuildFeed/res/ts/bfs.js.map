{"version":3,"sources":["bfs.ts"],"names":["BuildFeed","MobileMenuToggle","ev","preventDefault","this","nextElementSibling","classList","toggle","DropdownClick","link","alreadyOpen","parentElement","contains","CloseDropdowns","document","getElementById","add","ddParents","getElementsByClassName","i","length","remove","SwitchTheme","cookie","dataset","location","reload","SwitchLanguage","OpenSearch","CloseSearch","StopClick","stopPropagation","InitiateSearch","innerHTML","clearTimeout","timeout","ajax","readyState","XMLHttpRequest","DONE","abort","setInterval","SendSearch","modalInput","onreadystatechange","CompleteSearch","open","value","setRequestHeader","send","status","resultPane","templateContent","content","jsrender","templates","render","JSON","parse","responseText","resultLinks","getElementsByTagName","addEventListener","mev","ga","assign","currentTarget","href","BuildFeedSetup","j","childNodes","el","nodeName","ddThemes","ddLangs","window"],"mappings":"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","file":"bfs.js","sourcesContent":["/// <reference path=\"../../scripts/typings/google.analytics/ga.d.ts\" />\r\n/// <reference path=\"../../scripts/typings/jsrender/jsrender.d.ts\" />\r\n\"use strict\";\r\n\r\nmodule BuildFeed\r\n{\r\n   let ajax: XMLHttpRequest;\r\n   let timeout: number;\r\n\r\n   export function MobileMenuToggle(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const button = this as HTMLButtonElement;\r\n      button.nextElementSibling.classList.toggle(\"open\");\r\n   }\r\n\r\n   export function DropdownClick(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      const alreadyOpen = link.parentElement.classList.contains(\"open\");\r\n\r\n      CloseDropdowns(ev);\r\n\r\n      if (!alreadyOpen)\r\n      {\r\n         link.parentElement.classList.toggle(\"open\");\r\n\r\n         const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n         menuClickCapture.classList.add(\"open\");\r\n      }\r\n   }\r\n\r\n   export function CloseDropdowns(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n      for (let i = 0; i < ddParents.length; i++)\r\n      {\r\n         ddParents[i].classList.remove(\"open\");\r\n      }\r\n\r\n      const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n      menuClickCapture.classList.remove(\"open\");\r\n   }\r\n\r\n   export function SwitchTheme(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      document.cookie = `bf_theme=${link.dataset[\"theme\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n      location.reload(true);\r\n   }\r\n\r\n   export function SwitchLanguage(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const link = this as HTMLAnchorElement;\r\n      document.cookie = `bf_lang=${link.dataset[\"lang\"]}; expires=Fri, 31 Dec 9999 23:59:59 GMT; path=/`;\r\n      location.reload(true);\r\n   }\r\n\r\n   export function OpenSearch(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modal.classList.add(\"open\");\r\n   }\r\n\r\n   export function CloseSearch(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n\r\n      const modal = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modal.classList.remove(\"open\");\r\n   }\r\n\r\n   export function StopClick(ev: MouseEvent)\r\n   {\r\n      ev.preventDefault();\r\n      ev.stopPropagation();\r\n   }\r\n\r\n   export function InitiateSearch(ev: KeyboardEvent)\r\n   {\r\n      const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n      resultPane.innerHTML = \"\";\r\n\r\n      if (typeof (timeout) !== \"undefined\")\r\n      {\r\n         clearTimeout(timeout);\r\n      }\r\n\r\n      if (typeof (ajax) !== \"undefined\" && ajax.readyState !== XMLHttpRequest.DONE)\r\n      {\r\n         ajax.abort();\r\n      }\r\n\r\n      timeout = setInterval(SendSearch, 200);\r\n   }\r\n\r\n   export function SendSearch()\r\n   {\r\n      if (typeof (timeout) !== \"undefined\")\r\n      {\r\n         clearTimeout(timeout);\r\n      }\r\n\r\n      const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n\r\n      ajax = new XMLHttpRequest();\r\n      ajax.onreadystatechange = CompleteSearch;\r\n      ajax.open(\"GET\", `/api/GetSearchResult/${modalInput.value}/`, true);\r\n      ajax.setRequestHeader(\"accept\", \"application/json\");\r\n      ajax.send(null);\r\n   }\r\n\r\n   export function CompleteSearch(ev: ProgressEvent)\r\n   {\r\n      if (ajax.readyState !== XMLHttpRequest.DONE || ajax.status !== 200)\r\n      {\r\n         return;\r\n      }\r\n\r\n      const resultPane = document.getElementById(\"modal-search-result\") as HTMLDivElement;\r\n      const templateContent = document.getElementById(\"result-template\") as HTMLDivElement;\r\n      const template = jsrender.templates(templateContent.innerHTML);\r\n      const content = template.render(JSON.parse(ajax.responseText));\r\n      resultPane.innerHTML = content;\r\n\r\n      const resultLinks = resultPane.getElementsByTagName(\"a\");\r\n      for (let i = 0; i < resultLinks.length; i++)\r\n      {\r\n         resultLinks[i].addEventListener(\"click\", (mev: MouseEvent) =>\r\n         {\r\n            mev.preventDefault();\r\n            const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n            ga(\"send\", \"pageview\", `/api/GetSearchResult/${modalInput.value}/`);\r\n            location.assign((mev.currentTarget as HTMLAnchorElement).href);\r\n         });\r\n      }\r\n   }\r\n\r\n   export function BuildFeedSetup(ev: Event)\r\n   {\r\n      const ddParents = document.getElementsByClassName(\"dropdown-parent\");\r\n      for (let i = 0; i < ddParents.length; i++)\r\n      {\r\n         for (let j = 0; j < ddParents[i].childNodes.length; j++)\r\n         {\r\n            const el = ddParents[i].childNodes[j];\r\n\r\n            if (el.nodeName === \"A\")\r\n            {\r\n               el.addEventListener(\"click\", DropdownClick);\r\n            }\r\n         }\r\n      }\r\n\r\n      const menuClickCapture = document.getElementById(\"menu-open-overlay\") as HTMLDivElement;\r\n      menuClickCapture.addEventListener(\"click\", CloseDropdowns);\r\n\r\n      const ddThemes = document.getElementById(\"settings-theme-menu\").getElementsByTagName(\"a\");\r\n      for (let i = 0; i < ddThemes.length; i++)\r\n      {\r\n         ddThemes[i].addEventListener(\"click\", SwitchTheme);\r\n      }\r\n\r\n      const ddLangs = document.getElementById(\"settings-lang-menu\").getElementsByTagName(\"a\");\r\n      for (let i = 0; i < ddLangs.length; i++)\r\n      {\r\n         ddLangs[i].addEventListener(\"click\", SwitchLanguage);\r\n      }\r\n\r\n      const btnNav = document.getElementById(\"page-navigation-toggle\");\r\n      btnNav.addEventListener(\"click\", MobileMenuToggle);\r\n\r\n      const btnSearch = document.getElementById(\"page-navigation-search\");\r\n      btnSearch.addEventListener(\"click\", OpenSearch);\r\n\r\n      const modalOverlay = document.getElementById(\"modal-search-overlay\") as HTMLDivElement;\r\n      modalOverlay.addEventListener(\"click\", CloseSearch);\r\n\r\n      const modalDialog = document.getElementById(\"modal-search\") as HTMLDivElement;\r\n      modalDialog.addEventListener(\"click\", StopClick);\r\n\r\n      const modalInput = document.getElementById(\"modal-search-input\") as HTMLInputElement;\r\n      modalInput.addEventListener(\"keyup\", InitiateSearch);\r\n   }\r\n}\r\n\r\nwindow.addEventListener(\"load\", BuildFeed.BuildFeedSetup);"]}